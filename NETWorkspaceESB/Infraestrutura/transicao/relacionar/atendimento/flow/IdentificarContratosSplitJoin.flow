<bpel:process name="IdentificarContratosSplitJoin" targetNamespace="http://www.example.com/flow/Infraestrutura/transicao/relacionar/atendimento/flow/IdentificarContratosSplitJoin" bea:name="IdentificarContratosSplitJoin" xmlns:tns="http://www.example.com/flow/Infraestrutura/transicao/relacionar/atendimento/flow/IdentificarContratosSplitJoin" xmlns:bind="http://www.netservicos.com.br/IdentificarContratoSplitJoin/" xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:rescon="http://www.bea.com/alsb/flow/resources/config" xmlns:bea="http://www.bea.com/bpel/ui/extensions" xmlns:ext="http://www.bea.com/bpel/extensions" xmlns:expr="http://www.bea.com/wli/sb/stages/config" xmlns:trf="http://www.bea.com/wli/sb/stages/transform/config" xmlns:ns1="http://www.netservicos.com.br/ListarContratos/" xmlns:con="http://www.netservicos.com.br/ContratoAssinante">
     <bpel:partnerLinks>
			<bpel:partnerLink name="IdentificarContratosSplitJoin" partnerLinkType="tns:IdentificarContratosSplitJoin" myRole="IdentificarContratosSplitJoin">
			</bpel:partnerLink>
		<bpel:partnerLink name="ListarContratosPS" partnerLinkType="tns:ListarContratosPS_plnkType" partnerRole="ListarContratosPS_PartnerRole">
		</bpel:partnerLink></bpel:partnerLinks>

		<bpel:variables>
  		<bpel:variable name="request" messageType="bind:identificarContratosRequest">
			</bpel:variable>
			<bpel:variable name="response" messageType="bind:identificarContratosResponse">
			</bpel:variable>
		</bpel:variables>

     <bpel:sequence>
     <bpel:receive partnerLink="IdentificarContratosSplitJoin" operation="identificarContratos" variable="request" createInstance="yes">
			<rescon:receiveInfo>
        		<rescon:wsdl ref="Infraestrutura/transicao/relacionar/atendimento/wsdl/business/IdentificarContratoSplitJoin" binding="bind:IdentificarContratoSplitJoinSOAP12"/>
    		</rescon:receiveInfo>
     </bpel:receive>
     <bpel:forEach parallel="yes" counterName="contador">
     	<bpel:startCounterValue>1</bpel:startCounterValue>
     	<bpel:finalCounterValue>count($request.identificarContratosRequest/bases/baseAtiva)</bpel:finalCounterValue>
     	<bpel:scope bea:name="para cada base ativa">
     		<bpel:documentation>Para cada base de dados ativa será executa uma consulta para identificar contratos, conforme o atributo preenchido, telefone ou documento.</bpel:documentation>
     		<bpel:variables>
     			<bpel:variable name="listarContratosPorTelefoneRequest" messageType="ns1:listarContratosPorTelefoneRequest">
     			</bpel:variable>
     			<bpel:variable name="listarContratosPorTelefoneResponse" messageType="ns1:listarContratosPorTelefoneResponse">
     			</bpel:variable>
     			<bpel:variable name="listarContratosPorDocumentoRequest" messageType="ns1:listarContratosPorDocumentoRequest">
     			</bpel:variable>
     			<bpel:variable name="listarPorDocumentoContratosResponse" messageType="ns1:listarPorDocumentoContratosResponse">
     			</bpel:variable></bpel:variables>
     		<bpel:sequence>
     			<bpel:if bea:name="verifica qual atraibuto está preenchido">
     				<bpel:documentation>verifica qual atraibuto está preenchido e escolhe determinada respectiva operação</bpel:documentation>
     				<bpel:condition>string-length($request.identificarContratosRequest/telefone)>0</bpel:condition>
     				<bpel:sequence>
     					<bpel:assign>
     						<bpel:extensionAssignOperation>
     							<trf:assign varName="listarContratosPorTelefoneRequest.listarContratosPorTelefoneRequest">
     								<trf:expr>
     									
     								<expr:xqueryTransform>
     									<expr:resource ref="Infraestrutura/transicao/relacionar/atendimento/transformation/ListarContratosSplitJointPorTelefoneXQuery"/>
     									<expr:param name="identificarContratosRequest1">
     										<expr:path>$request.identificarContratosRequest</expr:path></expr:param>
     									<expr:param name="contador">
     										<expr:path>xs:int($contador)</expr:path></expr:param></expr:xqueryTransform></trf:expr>
     							</trf:assign>
     						</bpel:extensionAssignOperation></bpel:assign>
     					<bpel:invoke operation="listarContratosPorTelefone" partnerLink="ListarContratosPS" inputVariable="listarContratosPorTelefoneRequest" outputVariable="listarContratosPorTelefoneResponse">
     						<rescon:invokeInfo>
     							<rescon:service isProxy="true" ref="Infraestrutura/transicao/relacionar/atendimento/proxyservice/IdentificarContratosDSLProxy12V1"/>
     						</rescon:invokeInfo></bpel:invoke>
     					<bpel:assign>
     						<bpel:extensionAssignOperation>
     							<trf:insert varName="response.identificarContratosResponse">
     								<trf:expr>
     									<expr:xqueryText>$listarContratosPorTelefoneResponse.listarContratosPorTelefoneResponse/con:contratoAssinante</expr:xqueryText>
     								</trf:expr>
     								<trf:where>first-child</trf:where>
     								<trf:location>
     									<expr:xpathText>.</expr:xpathText>
     								</trf:location>
     							</trf:insert>
     						</bpel:extensionAssignOperation></bpel:assign></bpel:sequence>
     				<bpel:elseif>
     					<bpel:condition>string-length($request.identificarContratosRequest/cpf)>0
</bpel:condition>
     					<bpel:sequence>
     						<bpel:assign>
     							<bpel:extensionAssignOperation>
     								<trf:assign varName="listarContratosPorDocumentoRequest.listarContratosPorDocumentoRequest">
     									<trf:expr>
     										<expr:xqueryTransform>
     											<expr:resource ref="Infraestrutura/transicao/relacionar/atendimento/transformation/ListarContratosSplitJoinPorDocumentoXQuery">
     											</expr:resource>
     											<expr:param name="identificarContratosRequest1">
     												<expr:path>$request.identificarContratosRequest</expr:path>
     											</expr:param>
     											<expr:param name="base_dados">
     												<expr:path>xs:int($contador)</expr:path>
     											</expr:param>
     										</expr:xqueryTransform>
     									</trf:expr>
     								</trf:assign>
     							</bpel:extensionAssignOperation></bpel:assign>
     						
     						<bpel:invoke operation="listarContratosPorDocumento" partnerLink="ListarContratosPS" inputVariable="listarContratosPorDocumentoRequest" outputVariable="listarPorDocumentoContratosResponse">
     							<rescon:invokeInfo>
     								<rescon:service isProxy="true" ref="Infraestrutura/transicao/relacionar/atendimento/proxyservice/IdentificarContratosDSLProxy12V1"/>
     							</rescon:invokeInfo></bpel:invoke>
     						<bpel:assign>
     							<bpel:extensionAssignOperation>
     								<trf:insert varName="response.identificarContratosResponse">
     									<trf:expr>
     										<expr:xqueryText>$listarPorDocumentoContratosResponse.listarContratosPorDocumentoResponse/con:contratoAssinante</expr:xqueryText>
     									</trf:expr>
     									<trf:where>first-child</trf:where>
     									<trf:location>
     										<expr:xpathText>.</expr:xpathText>
     									</trf:location>
     								</trf:insert>
     							</bpel:extensionAssignOperation></bpel:assign></bpel:sequence>
     				</bpel:elseif>
     				<bpel:else>
     					<bpel:sequence>
     						<bpel:empty/>
     					</bpel:sequence>
     				</bpel:else>
     			</bpel:if>
     			</bpel:sequence>
     	</bpel:scope>
     </bpel:forEach>
     <bpel:reply partnerLink="IdentificarContratosSplitJoin" operation="identificarContratos" variable="response"/>
     </bpel:sequence>
</bpel:process>