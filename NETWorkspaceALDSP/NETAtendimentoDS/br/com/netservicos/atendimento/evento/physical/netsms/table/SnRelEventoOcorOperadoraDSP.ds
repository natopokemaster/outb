xquery version "1.0" encoding "UTF-8";

(::pragma xds <x:xds xmlns:x="urn:annotations.ld.bea.com" targetType="t:SnRelEventoOcorOperadoraDSP" xmlns:t="ld:br/com/netservicos/atendimento/evento/physical/netsms/table/SnRelEventoOcorOperadoraDSP">
<creationDate>2010-04-12T10:21:44</creationDate>
<relationalDB name="ATENDIMENTO_ONLINE" providerId="Oracle-9" sourceBindingProviderClassName="br.com.netservicos.binding.util.relacionar.AtendimentoOnlineNETSMSBindingProvider"/>
<field xpath="ID_EVENTO_OCORRENCIA" type="xs:integer">
  <extension nativeXpath="ID_EVENTO_OCORRENCIA" nativeTypeCode="3" nativeType="NUMBER" nativeSize="4" nativeFractionalDigits="0" nativeKey="true"/>
  <properties nullable="false"/>
</field>
<field xpath="CID_CONTRATO" type="xs:string">
  <extension nativeXpath="CID_CONTRATO" nativeTypeCode="12" nativeType="VARCHAR2" nativeSize="6" nativeFractionalDigits="null" nativeKey="true"/>
  <properties nullable="false"/>
</field>
<field xpath="ID_TIPO_OCORRENCIA" type="xs:integer">
  <extension nativeXpath="ID_TIPO_OCORRENCIA" nativeTypeCode="3" nativeType="NUMBER" nativeSize="4" nativeFractionalDigits="0" nativeKey="true"/>
  <properties nullable="false"/>
</field>
<field xpath="FLAG_FECHAMENTO_AUT" type="xs:integer">
  <extension nativeXpath="FLAG_FECHAMENTO_AUT" nativeTypeCode="3" nativeType="NUMBER" nativeSize="1" nativeFractionalDigits="0"/>
  <properties nullable="false"/>
</field>
<field xpath="ID_TIPO_RESOLUCAO" type="xs:integer">
  <extension nativeXpath="ID_TIPO_RESOLUCAO" nativeTypeCode="3" nativeType="NUMBER" nativeSize="4" nativeFractionalDigits="0"/>
  <properties nullable="true"/>
</field>
<field xpath="FLAG_ASSOC_AUTO_NOTIF" type="xs:integer">
  <extension nativeXpath="FLAG_ASSOC_AUTO_NOTIF" nativeTypeCode="3" nativeType="NUMBER" nativeSize="1" nativeFractionalDigits="0"/>
  <properties nullable="false"/>
</field>

<key name="PKSN_REL_EVENTO_OCOR_OPERADORA" type="snr:SnRelEventoOcorOperadoraDSP_KEY" inferredSchema="true" xmlns:snr="ld:br/com/netservicos/atendimento/evento/physical/netsms/table/SnRelEventoOcorOperadoraDSP"/>

<relationshipTarget roleName="SnEventoOcorrenciaDSP" roleNumber="1" XDS="ld:br/com/netservicos/atendimento/evento/physical/netsms/table/SnEventoOcorrenciaDSP.ds" opposite="SnRelEventoOcorOperadoraDSP"/>
<relationshipTarget roleName="SnTipoOcorrenciaDSP" roleNumber="1" XDS="ld:br/com/netservicos/atendimento/evento/physical/netsms/table/SnTipoOcorrenciaDSP.ds" opposite="SnRelEventoOcorOperadoraDSP"/>
</x:xds>::)

declare namespace f1 = "ld:br/com/netservicos/atendimento/evento/physical/netsms/table/SnRelEventoOcorOperadoraDSP";

import schema namespace t2 = "ld:br/com/netservicos/atendimento/evento/physical/netsms/table/SnRelEventoOcorOperadoraDSP" at "ld:br/com/netservicos/atendimento/evento/physical/netsms/table/schemas/SnRelEventoOcorOperadoraDSP.xsd";

import schema "ld:br/com/netservicos/atendimento/evento/physical/netsms/table/SnRelEventoOcorOperadoraDSP" at "ld:br/com/netservicos/atendimento/evento/physical/netsms/table/schemas/SnRelEventoOcorOperadoraDSP_KEY.xsd";

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="protected" kind="read" isPrimary="false" nativeName="SN_REL_EVENTO_OCOR_OPERADORA" nativeLevel2Container="PROD_JD" style="table">
   <nonCacheable/>   </f:function>::)

   declare function f1:SnRelEventoOcorOperadoraDSP() as schema-element(t2:SnRelEventoOcorOperadoraDSP)* external;

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="protected" kind="create" isPrimary="true" nativeName="SN_REL_EVENTO_OCOR_OPERADORA" nativeLevel2Container="PROD_JD" style="table">
   <nonCacheable/>   </f:function>::)

   declare procedure f1:createSnRelEventoOcorOperadoraDSP($p as element(t2:SnRelEventoOcorOperadoraDSP)*)as schema-element(t2:SnRelEventoOcorOperadoraDSP_KEY)* external;

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="protected" kind="update" isPrimary="true" nativeName="SN_REL_EVENTO_OCOR_OPERADORA" nativeLevel2Container="PROD_JD" style="table">
   <nonCacheable/>   </f:function>::)

   declare procedure f1:updateSnRelEventoOcorOperadoraDSP($p as changed-element(t2:SnRelEventoOcorOperadoraDSP)*) as empty()  external;

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="protected" kind="delete" isPrimary="true" nativeName="SN_REL_EVENTO_OCOR_OPERADORA" nativeLevel2Container="PROD_JD" style="table">
   <nonCacheable/>   </f:function>::)

   declare procedure f1:deleteSnRelEventoOcorOperadoraDSP($p as element(t2:SnRelEventoOcorOperadoraDSP)*) as empty()  external;

declare namespace f2="ld:br/com/netservicos/atendimento/evento/physical/netsms/table/SnEventoOcorrenciaDSP";

import schema namespace t1 = "ld:br/com/netservicos/atendimento/evento/physical/netsms/table/SnEventoOcorrenciaDSP" at "ld:br/com/netservicos/atendimento/evento/physical/netsms/table/schemas/SnEventoOcorrenciaDSP.xsd";

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="protected" kind="navigate" roleName="SnEventoOcorrenciaDSP"/>::)

   declare function f1:getSnEventoOcorrenciaDSP($fk as element(t2:SnRelEventoOcorOperadoraDSP)) as element(t1:SnEventoOcorrenciaDSP)*
   {
      for $pk in f2:SnEventoOcorrenciaDSP()
      where $pk/ID_EVENTO_OCORRENCIA eq $fk/ID_EVENTO_OCORRENCIA
      return $pk
   };

declare namespace f3="ld:br/com/netservicos/atendimento/evento/physical/netsms/table/SnTipoOcorrenciaDSP";

import schema namespace t3 = "ld:br/com/netservicos/atendimento/evento/physical/netsms/table/SnTipoOcorrenciaDSP" at "ld:br/com/netservicos/atendimento/evento/physical/netsms/table/schemas/SnTipoOcorrenciaDSP.xsd";

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="protected" kind="navigate" roleName="SnTipoOcorrenciaDSP"/>::)

   declare function f1:getSnTipoOcorrenciaDSP($fk as element(t2:SnRelEventoOcorOperadoraDSP)) as element(t3:SnTipoOcorrenciaDSP)*
   {
      for $pk in f3:SnTipoOcorrenciaDSP()
      where $pk/ID_TIPO_OCORRENCIA eq $fk/ID_TIPO_OCORRENCIA
      return $pk
   };

