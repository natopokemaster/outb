xquery version "1.0" encoding "UTF-8";

(::pragma xds <x:xds xmlns:x="urn:annotations.ld.bea.com" targetType="t:SnSitCobrancaDSP" xmlns:t="ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/SnSitCobrancaDSP">
<creationDate>2014-07-30T09:59:50</creationDate>
<!--<relationalDB name="jdbc/NETSMS_ONLINE_PAGAMENTO_BH" providerId="Oracle-9"/>-->
<relationalDB name="ATENDIMENTO_ONLINE" providerId="Oracle-9" sourceBindingProviderClassName="br.com.netservicos.binding.util.relacionar.AtendimentoOnlineNETSMSBindingProvider"/>
<field xpath="ID_SIT_COBRANCA" type="xs:integer">
  <extension nativeXpath="ID_SIT_COBRANCA" nativeTypeCode="3" nativeType="NUMBER" nativeSize="2" nativeFractionalDigits="0" nativeKey="true"/>
  <properties nullable="false"/>
</field>
<field xpath="DESCRICAO" type="xs:string">
  <extension nativeXpath="DESCRICAO" nativeTypeCode="12" nativeType="VARCHAR2" nativeSize="30" nativeFractionalDigits="null"/>
  <properties nullable="false"/>
</field>
<field xpath="COD_COR" type="xs:string">
  <extension nativeXpath="COD_COR" nativeTypeCode="12" nativeType="VARCHAR2" nativeSize="6" nativeFractionalDigits="null"/>
  <properties nullable="false"/>
</field>
<field xpath="ID_SITUACAO_BOLETO" type="xs:integer">
  <extension nativeXpath="ID_SITUACAO_BOLETO" nativeTypeCode="3" nativeType="NUMBER" nativeSize="6" nativeFractionalDigits="0"/>
  <properties nullable="true"/>
</field>

<key name="PKSN_SIT_COBRANCA" type="sns:SnSitCobrancaDSP_KEY" inferredSchema="true" xmlns:sns="ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/SnSitCobrancaDSP"/>

<relationshipTarget roleName="SnRelObjSitCobrancaDSP" roleNumber="2" XDS="ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/SnRelObjSitCobrancaDSP.ds" minOccurs="0" maxOccurs="unbounded" opposite="SnSitCobrancaDSP"/>
</x:xds>::)

declare namespace f1 = "ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/SnSitCobrancaDSP";

import schema namespace t6 = "ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/SnSitCobrancaDSP" at "ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/schemas/SnSitCobrancaDSP.xsd";

import schema "ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/SnSitCobrancaDSP" at "ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/schemas/SnSitCobrancaDSP_KEY.xsd";

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="public" kind="read" isPrimary="false" nativeName="SN_SIT_COBRANCA" nativeLevel2Container="PROD_JD" style="table">
   <nonCacheable/>   </f:function>::)

   declare function f1:SnSitCobrancaDSP() as schema-element(t6:SnSitCobrancaDSP)* external;

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="public" kind="create" isPrimary="true" nativeName="SN_SIT_COBRANCA" nativeLevel2Container="PROD_JD" style="table">
   <nonCacheable/>   </f:function>::)

   declare procedure f1:createSnSitCobrancaDSP($p as element(t6:SnSitCobrancaDSP)*)as schema-element(t6:SnSitCobrancaDSP_KEY)* external;

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="public" kind="update" isPrimary="true" nativeName="SN_SIT_COBRANCA" nativeLevel2Container="PROD_JD" style="table">
   <nonCacheable/>   </f:function>::)

   declare procedure f1:updateSnSitCobrancaDSP($p as changed-element(t6:SnSitCobrancaDSP)*) as empty()  external;

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="public" kind="delete" isPrimary="true" nativeName="SN_SIT_COBRANCA" nativeLevel2Container="PROD_JD" style="table">
   <nonCacheable/>   </f:function>::)

   declare procedure f1:deleteSnSitCobrancaDSP($p as element(t6:SnSitCobrancaDSP)*) as empty()  external;

declare namespace f2="ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/SnRelObjSitCobrancaDSP";

import schema namespace t4 = "ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/SnRelObjSitCobrancaDSP" at "ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/schemas/SnRelObjSitCobrancaDSP.xsd";

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="public" kind="navigate" roleName="SnRelObjSitCobrancaDSP"/>::)

   declare function f1:getSnRelObjSitCobrancaDSP($pk as element(t6:SnSitCobrancaDSP)) as element(t4:SnRelObjSitCobrancaDSP)*
   {
      for $fk in f2:SnRelObjSitCobrancaDSP()
      where $pk/ID_SIT_COBRANCA eq $fk/ID_SIT_COBRANCA
      return $fk
   };

