xquery version "1.0" encoding "UTF-8";

(::pragma xds <x:xds xmlns:x="urn:annotations.ld.bea.com" targetType="t:SnCaracteristicaDSP" xmlns:t="ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/SnCaracteristicaDSP">
<creationDate>2014-01-17T14:18:19</creationDate>
<!--<relationalDB name="jdbc/NETSMS_ONLINE_ATENDIMENTO_BH" providerId="Oracle-9"/>-->
<relationalDB name="ATENDIMENTO_ONLINE" providerId="Oracle-9" sourceBindingProviderClassName="br.com.netservicos.binding.util.relacionar.AtendimentoOnlineNETSMSBindingProvider"/>
<field xpath="ID_CARACTERISTICA" type="xs:integer">
  <extension nativeXpath="ID_CARACTERISTICA" nativeTypeCode="3" nativeType="NUMBER" nativeSize="2" nativeFractionalDigits="0" nativeKey="true"/>
  <properties nullable="false"/>
</field>
<field xpath="DESCRICAO" type="xs:string">
  <extension nativeXpath="DESCRICAO" nativeTypeCode="12" nativeType="VARCHAR2" nativeSize="50" nativeFractionalDigits="null"/>
  <properties nullable="false"/>
</field>
<field xpath="ID_SEGMENTO_NEGOCIOS" type="xs:integer">
  <extension nativeXpath="ID_SEGMENTO_NEGOCIOS" nativeTypeCode="3" nativeType="NUMBER" nativeSize="5" nativeFractionalDigits="0"/>
  <properties nullable="false"/>
</field>

<key name="PKSN_CARACTERISTICA" type="snc:SnCaracteristicaDSP_KEY" inferredSchema="true" xmlns:snc="ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/SnCaracteristicaDSP"/>

<relationshipTarget roleName="SnProdutoDSP" roleNumber="2" XDS="ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/SnProdutoDSP.ds" minOccurs="0" maxOccurs="unbounded" opposite="SnCaracteristicaDSP"/>
</x:xds>::)

declare namespace f1 = "ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/SnCaracteristicaDSP";

import schema namespace t1 = "ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/SnCaracteristicaDSP" at "ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/schemas/SnCaracteristicaDSP.xsd";

import schema "ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/SnCaracteristicaDSP" at "ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/schemas/SnCaracteristicaDSP_KEY.xsd";

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="protected" kind="read" isPrimary="false" nativeName="SN_CARACTERISTICA" nativeLevel2Container="PROD_JD" style="table">
   <nonCacheable/>   </f:function>::)

   declare function f1:SnCaracteristicaDSP() as schema-element(t1:SnCaracteristicaDSP)* external;

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="protected" kind="create" isPrimary="true" nativeName="SN_CARACTERISTICA" nativeLevel2Container="PROD_JD" style="table">
   <nonCacheable/>   </f:function>::)

   declare procedure f1:createSnCaracteristicaDSP($p as element(t1:SnCaracteristicaDSP)*)as schema-element(t1:SnCaracteristicaDSP_KEY)* external;

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="protected" kind="update" isPrimary="true" nativeName="SN_CARACTERISTICA" nativeLevel2Container="PROD_JD" style="table">
   <nonCacheable/>   </f:function>::)

   declare procedure f1:updateSnCaracteristicaDSP($p as changed-element(t1:SnCaracteristicaDSP)*) as empty()  external;

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="protected" kind="delete" isPrimary="true" nativeName="SN_CARACTERISTICA" nativeLevel2Container="PROD_JD" style="table">
   <nonCacheable/>   </f:function>::)

   declare procedure f1:deleteSnCaracteristicaDSP($p as element(t1:SnCaracteristicaDSP)*) as empty()  external;

declare namespace f2="ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/SnProdutoDSP";

import schema namespace t3 = "ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/SnProdutoDSP" at "ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/schemas/SnProdutoDSP.xsd";

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="protected" kind="navigate" roleName="SnProdutoDSP"/>::)

   declare function f1:getSnProdutoDSP($pk as element(t1:SnCaracteristicaDSP)) as element(t3:SnProdutoDSP)*
   {
      for $fk in f2:SnProdutoDSP()
      where $pk/ID_CARACTERISTICA eq $fk/ID_CARACTERISTICA
      return $fk
   };

