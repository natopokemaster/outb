spring.profiles.active=${SPRING_PROFILES_ACTIVE}

spring.application.name=${SPRING_APPLICATION_NAME}

# Prometheus/Actuator
management.endpoints.web.exposure.include=${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE}
management.endpoint.prometheus.enabled=${MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED}

# Actuator info
info.app.name=${INFO_APP_NAME}
info.app.description=${INFO_APP_DESCRIPTION}
info.app.version=${INFO_APP_VERSION}

# enable nanoTimestamp to published fields (default is milliseconds)
app.apply-nano-timestamp=${APP_APPLY_NANO_TIMESTAMP}
app.zone-id=${APP_ZONE_ID}

# essa implementacao e suas funcionalidades devem ser removidas assim que tivermos a api path valida
# Na api de teste fornecida a requisicao nao aceita headers e body, caso seja enviado um evento de erro sera gerado na respectiva fila
app.request.enviar-headers-body=${APP_REQUEST_ENVIAR_HEADERS_BODY}

# apigee token
apigee.base-url=${APIGEE_BASE_URL}
apigee.path-token=${APIGEE_PATH_TOKEN}
apigee.authorization=${APIGEE_AUTHORIZATION}
apigee.grant-type=${APIGEE_GRANT_TYPE}
apigee.auth.type=${APIGEE_AUTH_TYPE}

# apigee config
apigee.connect-timeout-millis=${APIGEE_CONNECT_TIMEOUT_MILLIS}
apigee.read-timeout-handler-seconds=${APIGEE_READ_TIMEOUT_HANDLER_SECONDS}
apigee.write-timeout-handler-seconds=${APIGEE_WRITE_TIMEOUT_HANDLER_SECONDS}
apigee.max-memory-size=${APIGEE_MAX_MEMORY_SIZE}

# apigee connection provider pool
apigee.max-connections=${APIGEE_MAX_CONNECTIONS}
apigee.max-idle-time=${APIGEE_MAX_IDLE_TIME}
apigee.max-life-time=${APIGEE_MAX_LIFE_TIME}
apigee.pending-acquire-timeout=${APIGEE_PENDING_ACQUIRE_TIMEOUT}
apigee.evict-in-background-time=${APIGEE_EVICT_IN_BACKGROUND_TIME}

# apigee request
# milliseconds
app.request.retry-interval=${APP_REQUEST_RETRY_INTERVAL}
app.request.retry-enabled=${APP_REQUEST_RETRY_ENABLED}
app.request.alowed-status-for-retry=${APP_REQUEST_ALOWED_STATUS_FOR_RETRY}
app.request.max-retry-attempts=${APP_REQUEST_MAX_RETRY_ATTEMPTS}
app.request.method=${APP_REQUEST_METHOD}
app.request.schema=${APP_REQUEST_SCHEMA}
app.request.base-url=${APP_REQUEST_BASE_URL}
app.request.path=${APP_REQUEST_PATH}

# RABBITMQ QUEUES AND EXCHANGES
app.rabbitmq.queue=${APP_RABBITMQ_QUEUE}
app.rabbitmq.error-exange=${APP_RABBITMQ_ERROR_EXANGE}

# RABBITMQ HEADERS
app.rabbitmq.header.event=${APP_RABBITMQ_HEADER_EVENT}
app.rabbitmq.header.app-id=${APP_RABBITMQ_HEADER_APP_ID}
app.rabbitmq.header.level=${APP_RABBITMQ_HEADER_LEVEL}