xquery version "1.0" encoding "UTF-8";

(::pragma xds <x:xds xmlns:x="urn:annotations.ld.bea.com" targetType="t:PpCategoriaPpvDSP" xmlns:t="ld:br/com/netservicos/atendimento/ppv/physical/netsms/table/PpCategoriaPpvDSP">
<creationDate>2016-08-23T16:15:35</creationDate>
<relationalDB name="ATENDIMENTO_ONLINE" providerId="Oracle-9" sourceBindingProviderClassName="br.com.netservicos.binding.util.relacionar.AtendimentoOnlineNETSMSBindingProvider"/>
<field xpath="ID_TIPO_PPV" type="xs:integer">
  <extension nativeXpath="ID_TIPO_PPV" nativeTypeCode="3" nativeType="NUMBER" nativeSize="2" nativeFractionalDigits="0" nativeKey="true"/>
  <properties nullable="false"/>
</field>
<field xpath="ID_CATEGORIA" type="xs:integer">
  <extension nativeXpath="ID_CATEGORIA" nativeTypeCode="3" nativeType="NUMBER" nativeSize="4" nativeFractionalDigits="0" nativeKey="true"/>
  <properties nullable="false"/>
</field>
<field xpath="DESCRICAO" type="xs:string">
  <extension nativeXpath="DESCRICAO" nativeTypeCode="12" nativeType="VARCHAR2" nativeSize="100" nativeFractionalDigits="null"/>
  <properties nullable="false"/>
</field>

<key name="CTGPPV_PK" type="ppc:PpCategoriaPpvDSP_KEY" inferredSchema="true" xmlns:ppc="ld:br/com/netservicos/atendimento/ppv/physical/netsms/table/PpCategoriaPpvDSP"/>

<relationshipTarget roleName="PpTipoPpvDSP" roleNumber="1" XDS="ld:br/com/netservicos/atendimento/ppv/physical/netsms/table/PpTipoPpvDSP.ds" opposite="PpCategoriaPpvDSP"/>
<relationshipTarget roleName="PpEventoPpvDSP" roleNumber="2" XDS="ld:br/com/netservicos/atendimento/ppv/physical/netsms/table/PpEventoPpvDSP.ds" minOccurs="0" maxOccurs="unbounded" opposite="PpCategoriaPpvDSP"/>
</x:xds>::)

declare namespace f1 = "ld:br/com/netservicos/atendimento/ppv/physical/netsms/table/PpCategoriaPpvDSP";

import schema namespace t2 = "ld:br/com/netservicos/atendimento/ppv/physical/netsms/table/PpCategoriaPpvDSP" at "ld:br/com/netservicos/atendimento/ppv/physical/netsms/table/schemas/PpCategoriaPpvDSP.xsd";

import schema "ld:br/com/netservicos/atendimento/ppv/physical/netsms/table/PpCategoriaPpvDSP" at "ld:br/com/netservicos/atendimento/ppv/physical/netsms/table/schemas/PpCategoriaPpvDSP_KEY.xsd";

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="protected" kind="read" isPrimary="false" nativeName="PP_CATEGORIA_PPV" nativeLevel2Container="PROD_JD" style="table">
   <nonCacheable/>   </f:function>::)

   declare function f1:PpCategoriaPpvDSP() as schema-element(t2:PpCategoriaPpvDSP)* external;

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="protected" kind="create" isPrimary="true" nativeName="PP_CATEGORIA_PPV" nativeLevel2Container="PROD_JD" style="table">
   <nonCacheable/>   </f:function>::)

   declare procedure f1:createPpCategoriaPpvDSP($p as element(t2:PpCategoriaPpvDSP)*)as schema-element(t2:PpCategoriaPpvDSP_KEY)* external;

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="protected" kind="update" isPrimary="true" nativeName="PP_CATEGORIA_PPV" nativeLevel2Container="PROD_JD" style="table">
   <nonCacheable/>   </f:function>::)

   declare procedure f1:updatePpCategoriaPpvDSP($p as changed-element(t2:PpCategoriaPpvDSP)*) as empty()  external;

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="protected" kind="delete" isPrimary="true" nativeName="PP_CATEGORIA_PPV" nativeLevel2Container="PROD_JD" style="table">
   <nonCacheable/>   </f:function>::)

   declare procedure f1:deletePpCategoriaPpvDSP($p as element(t2:PpCategoriaPpvDSP)*) as empty()  external;

declare namespace f2="ld:br/com/netservicos/atendimento/ppv/physical/netsms/table/PpTipoPpvDSP";

import schema namespace t10 = "ld:br/com/netservicos/atendimento/ppv/physical/netsms/table/PpTipoPpvDSP" at "ld:br/com/netservicos/atendimento/ppv/physical/netsms/table/schemas/PpTipoPpvDSP.xsd";

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="protected" kind="navigate" roleName="PpTipoPpvDSP"/>::)

   declare function f1:getPpTipoPpvDSP($fk as element(t2:PpCategoriaPpvDSP)) as element(t10:PpTipoPpvDSP)*
   {
      for $pk in f2:PpTipoPpvDSP()
      where $pk/ID_TIPO_PPV eq $fk/ID_TIPO_PPV
      return $pk
   };

declare namespace f3="ld:br/com/netservicos/atendimento/ppv/physical/netsms/table/PpEventoPpvDSP";

import schema namespace t3 = "ld:br/com/netservicos/atendimento/ppv/physical/netsms/table/PpEventoPpvDSP" at "ld:br/com/netservicos/atendimento/ppv/physical/netsms/table/schemas/PpEventoPpvDSP.xsd";

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="protected" kind="navigate" roleName="PpEventoPpvDSP"/>::)

   declare function f1:getPpEventoPpvDSP($pk as element(t2:PpCategoriaPpvDSP)) as element(t3:PpEventoPpvDSP)*
   {
      for $fk in f3:PpEventoPpvDSP()
      where $pk/ID_TIPO_PPV eq $fk/ID_TIPO_PPV
         and $pk/ID_CATEGORIA eq $fk/ID_CATEGORIA
      return $fk
   };

