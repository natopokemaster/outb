xquery version "1.0" encoding "UTF-8";

(::pragma xds <x:xds xmlns:x="urn:annotations.ld.bea.com" targetType="t:SnTipoSegmentoDSP" xmlns:t="ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/SnTipoSegmentoDSP">
<creationDate>2013-12-23T14:40:51</creationDate>
<!--<relationalDB name="jdbc/NETSMS_ONLINE_ATENDIMENTO_BH" providerId="Oracle-9"/>-->
<relationalDB name="ATENDIMENTO_ONLINE" providerId="Oracle-9" sourceBindingProviderClassName="br.com.netservicos.binding.util.relacionar.AtendimentoOnlineNETSMSBindingProvider"/>
<field xpath="ID_TIPO_SEGMENTO" type="xs:integer">
  <extension nativeXpath="ID_TIPO_SEGMENTO" nativeTypeCode="3" nativeType="NUMBER" nativeSize="6" nativeFractionalDigits="0" nativeKey="true"/>
  <properties nullable="false"/>
</field>
<field xpath="DESCRICAO" type="xs:string">
  <extension nativeXpath="DESCRICAO" nativeTypeCode="12" nativeType="VARCHAR2" nativeSize="15" nativeFractionalDigits="null"/>
  <properties nullable="true"/>
</field>
<field xpath="ESTRELAS" type="xs:string">
  <extension nativeXpath="ESTRELAS" nativeTypeCode="12" nativeType="VARCHAR2" nativeSize="10" nativeFractionalDigits="null"/>
  <properties nullable="true"/>
</field>

<key name="PKSN_TIPO_SEGMENTO" type="snt:SnTipoSegmentoDSP_KEY" inferredSchema="true" xmlns:snt="ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/SnTipoSegmentoDSP"/>

<relationshipTarget roleName="SnRelAssinanteSegmentacaoDSP" roleNumber="2" XDS="ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/SnRelAssinanteSegmentacaoDSP.ds" minOccurs="0" maxOccurs="unbounded" opposite="SnTipoSegmentoDSP"/>
</x:xds>::)

declare namespace f1 = "ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/SnTipoSegmentoDSP";

import schema namespace t6 = "ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/SnTipoSegmentoDSP" at "ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/schemas/SnTipoSegmentoDSP.xsd";

import schema "ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/SnTipoSegmentoDSP" at "ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/schemas/SnTipoSegmentoDSP_KEY.xsd";

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="protected" kind="read" isPrimary="false" nativeName="SN_TIPO_SEGMENTO" nativeLevel2Container="PROD_JD" style="table">
   <nonCacheable/>   </f:function>::)

   declare function f1:SnTipoSegmentoDSP() as schema-element(t6:SnTipoSegmentoDSP)* external;

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="protected" kind="create" isPrimary="true" nativeName="SN_TIPO_SEGMENTO" nativeLevel2Container="PROD_JD" style="table">
   <nonCacheable/>   </f:function>::)

   declare procedure f1:createSnTipoSegmentoDSP($p as element(t6:SnTipoSegmentoDSP)*)as schema-element(t6:SnTipoSegmentoDSP_KEY)* external;

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="protected" kind="update" isPrimary="true" nativeName="SN_TIPO_SEGMENTO" nativeLevel2Container="PROD_JD" style="table">
   <nonCacheable/>   </f:function>::)

   declare procedure f1:updateSnTipoSegmentoDSP($p as changed-element(t6:SnTipoSegmentoDSP)*) as empty()  external;

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="protected" kind="delete" isPrimary="true" nativeName="SN_TIPO_SEGMENTO" nativeLevel2Container="PROD_JD" style="table">
   <nonCacheable/>   </f:function>::)

   declare procedure f1:deleteSnTipoSegmentoDSP($p as element(t6:SnTipoSegmentoDSP)*) as empty()  external;

declare namespace f2="ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/SnRelAssinanteSegmentacaoDSP";

import schema namespace t2 = "ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/SnRelAssinanteSegmentacaoDSP" at "ld:br/com/netservicos/atendimento/contrato/physical/netsms/table/schemas/SnRelAssinanteSegmentacaoDSP.xsd";

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="protected" kind="navigate" roleName="SnRelAssinanteSegmentacaoDSP"/>::)

   declare function f1:getSnRelAssinanteSegmentacaoDSP($pk as element(t6:SnTipoSegmentoDSP)) as element(t2:SnRelAssinanteSegmentacaoDSP)*
   {
      for $fk in f2:SnRelAssinanteSegmentacaoDSP()
      where $pk/ID_TIPO_SEGMENTO eq $fk/ID_TIPO_SEGMENTO
      return $fk
   };

