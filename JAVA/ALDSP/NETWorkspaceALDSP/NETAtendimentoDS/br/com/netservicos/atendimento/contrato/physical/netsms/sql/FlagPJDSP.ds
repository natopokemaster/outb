xquery version "1.0" encoding "UTF-8";

(::pragma xds <x:xds xmlns:x="urn:annotations.ld.bea.com" targetType="t:FlagAdimDSP" xmlns:t="ld:br/com/netservicos/atendimento/contrato/physical/netsms/sql/FlagAdimDSP">
<creationDate>2014-01-28T10:47:16</creationDate>
<!--<relationalDB name="jdbc/NETSMS_ONLINE_ATENDIMENTO_BH" providerId="Oracle-9"/>-->
<relationalDB name="ATENDIMENTO_ONLINE" providerId="Oracle-9" sourceBindingProviderClassName="br.com.netservicos.binding.util.relacionar.AtendimentoOnlineNETSMSBindingProvider"/>
<field xpath="FLAG_PJ" type="xs:string">
  <extension nativeXpath="FLAG_PJ" nativeType="VARCHAR2" nativeTypeCode="12" nativeSize="1" nativeFractionalDigits="0"/>
  <properties nullable="true"/>
</field>

</x:xds>::)

declare namespace f1 = "ld:br/com/netservicos/atendimento/contrato/physical/netsms/sql/FlagPJDSP";

import schema namespace t1 = "ld:br/com/netservicos/atendimento/contrato/physical/netsms/sql/FlagAdimDSP" at "ld:br/com/netservicos/atendimento/contrato/physical/netsms/sql/schemas/FlagAdimDSP.xsd";

   (::pragma function <f:function xmlns:f="urn:annotations.ld.bea.com" visibility="protected" kind="read" isPrimary="false" style="sqlQuery">
   <sql isSubquery="true">SELECT CASE 
                      WHEN (SELECT COUNT(DISTINCT A.ID_PONTO) 
                              FROM PROD_JD.SN_REL_PONTO_PRODUTO A,  
                                   PROD_JD.SN_PRODUTO B, 
                                   PROD_JD.SN_ASSINANTE SA 
                             WHERE A.ID_PRODUTO = B.ID_PRODUTO  
                               AND A.DT_FIM > SYSDATE  
                               AND A.INSTALADO = 1  
                               AND A.NUM_CONTRATO = SC.NUM_CONTRATO 
                               AND A.CID_CONTRATO = SC.CID_CONTRATO 
                               AND SA.ID_ASSINANTE = SC.ID_ASSINANTE 
                               AND B.ID_CARACTERISTICA IN (0,1,2) 
                               AND SA.ID_TIPO_PESSOA = 2) > 11 THEN 
                       'S' 
                      ELSE 
                       DECODE(sc.ID_TIPO_CONTRATO, 
                              1, 
                              'N', 
                              2, 
                              DECODE((SELECT s.id_modalidade_cobranca 
                                        FROM prod_jd.sn_contrato_coletivo s 
                                       WHERE s.num_contrato = sc.num_contrato  
                                         AND s.cid_contrato = sc.cid_Contrato), 
                                     1, 
                                     'S', 
                                     2, 
                                     'S', 
                                     'N'), 
                              3, 
                              DECODE((SELECT DISTINCT s.id_modalidade_cobranca   
                                        FROM prod_jd.sn_contrato_coletivo s,  
                                             prod_jd.sn_rel_contrato_mestre_filiado srcf  
                                       WHERE s.num_contrato = srcf.num_contrato_mestre    
                                         AND s.cid_contrato = srcf.cid_contrato  
                                         AND srcf.DT_FIM = TO_DATE('30/12/2049','DD/MM/YYYY')  
                                         AND srcf.num_contrato_filiado = sc.num_contrato  
                                         AND srcf.cid_contrato = sc.cid_Contrato), 
                                     1, 
                                     'S', 
                                     2, 
                                     'S', 
                                     'N')) 
                    END FLAG_PJ 
               FROM PROD_JD.SN_CONTRATO SC  
              WHERE SC.NUM_CONTRATO = ?
                AND sc.cid_contrato = ?</sql>
   <params>
      <param nativeType="INTEGER" nativeTypeCode="4"/>
      <param nativeType="INTEGER" nativeTypeCode="4"/>
   </params>

   </f:function>::)

   declare function f1:sqlQuery($num_contrato as xs:integer, $cid_contrato as xs:string) as schema-element(t1:FlagAdimDSP)* external;

